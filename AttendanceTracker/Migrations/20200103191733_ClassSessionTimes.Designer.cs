// <auto-generated />
using System;
using AttendanceTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendanceTracker.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200103191733_ClassSessionTimes")]
    partial class ClassSessionTimes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendanceTracker.Models.ClassSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentClassId");

                    b.ToTable("ClassSession");
                });

            modelBuilder.Entity("AttendanceTracker.Models.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BeltGrade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "10. geup"
                        },
                        new
                        {
                            Id = 2,
                            Description = "8.1 geup"
                        },
                        new
                        {
                            Id = 3,
                            Description = "8. geup"
                        },
                        new
                        {
                            Id = 4,
                            Description = "7.1 geup"
                        },
                        new
                        {
                            Id = 5,
                            Description = "7. geup"
                        },
                        new
                        {
                            Id = 6,
                            Description = "6.1. geup"
                        },
                        new
                        {
                            Id = 7,
                            Description = "6.1 geup"
                        },
                        new
                        {
                            Id = 8,
                            Description = "6. geup"
                        },
                        new
                        {
                            Id = 9,
                            Description = "5.1 geup"
                        },
                        new
                        {
                            Id = 10,
                            Description = "5. geup"
                        },
                        new
                        {
                            Id = 11,
                            Description = "4.1 geup"
                        },
                        new
                        {
                            Id = 12,
                            Description = "4. geup"
                        },
                        new
                        {
                            Id = 13,
                            Description = "3. geup"
                        },
                        new
                        {
                            Id = 14,
                            Description = "2. geup"
                        },
                        new
                        {
                            Id = 15,
                            Description = "1. geup"
                        },
                        new
                        {
                            Id = 16,
                            Description = "1. dan"
                        },
                        new
                        {
                            Id = 17,
                            Description = "2. dan"
                        },
                        new
                        {
                            Id = 18,
                            Description = "3. dan"
                        },
                        new
                        {
                            Id = 19,
                            Description = "4. dan"
                        },
                        new
                        {
                            Id = 20,
                            Description = "5. dan"
                        },
                        new
                        {
                            Id = 21,
                            Description = "6. dan"
                        },
                        new
                        {
                            Id = 22,
                            Description = "7. dan"
                        },
                        new
                        {
                            Id = 23,
                            Description = "8. dan"
                        },
                        new
                        {
                            Id = 24,
                            Description = "9. dan"
                        });
                });

            modelBuilder.Entity("AttendanceTracker.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.ToTable("Instructor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Jon",
                            GradeId = 15,
                            LastName = "Karlsen",
                            MiddleName = "Arild"
                        });
                });

            modelBuilder.Entity("AttendanceTracker.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassSessionId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentClassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassSessionId");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudentClassId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("AttendanceTracker.Models.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.ToTable("StudentClass");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Barn Nye",
                            InstructorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Barn Øvede",
                            InstructorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Ungdom",
                            InstructorId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Voksen",
                            InstructorId = 1
                        });
                });

            modelBuilder.Entity("AttendanceTracker.Models.ClassSession", b =>
                {
                    b.HasOne("AttendanceTracker.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");
                });

            modelBuilder.Entity("AttendanceTracker.Models.Instructor", b =>
                {
                    b.HasOne("AttendanceTracker.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AttendanceTracker.Models.Student", b =>
                {
                    b.HasOne("AttendanceTracker.Models.ClassSession", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassSessionId");

                    b.HasOne("AttendanceTracker.Models.Grade", "Grade")
                        .WithMany()
                        .HasForeignKey("GradeId");

                    b.HasOne("AttendanceTracker.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");
                });

            modelBuilder.Entity("AttendanceTracker.Models.StudentClass", b =>
                {
                    b.HasOne("AttendanceTracker.Models.Instructor", "Instructor")
                        .WithMany("ClassesTaught")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
